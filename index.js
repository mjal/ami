// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var Options, Search, alias, default_site, input, route, sites;
    default_site = "google";
    sites = {
      "google": function(query) {
        return "https://www.google.fr/search?q=" + query;
      },
      "wikipedia": function(query) {
        return "http://fr.wikipedia.org/w/index.php?search=" + query;
      },
      "youtube": function(query) {
        return "https://www.youtube.com/results?search_query=" + query;
      },
      "duckduckgo": function(query) {
        return "https://duckduckgo.com/?q=" + query;
      },
      "soundcloud": function(query) {
        return "https://soundcloud.com/search?q=" + query;
      }
    };
    alias = {
      "g": "google",
      "ddg": "duckduckgo",
      "w": "wikipedia",
      "yt": "youtube",
      "sc": "soundcloud"
    };
    console.log("sites");
    console.log(sites);
    console.log("alias");
    console.log(alias);
    route = function(input) {
      var bang, i, part, parts, template, _i, _len;
      parts = input.split(/\ +/);
      console.log("parts");
      console.log(parts);
      for (i = _i = 0, _len = parts.length; _i < _len; i = ++_i) {
        part = parts[i];
        if (part.charAt(0) !== "!") {
          continue;
        }
        bang = part.substring(1);
        if (!(sites[bang] || alias[bang])) {
          continue;
        }
        template = sites[bang];
        template || (template = sites[alias[bang]]);
        parts.splice(i, 1);
        window.location.href = template(parts.join("+"));
        return;
      }
      template = sites[default_site];
      return window.location.href = template(parts.join("+"));
    };
    Search = (function(_super) {
      __extends(Search, _super);

      function Search() {
        Search.__super__.constructor.apply(this, arguments);
        this.html($("#tpl_main").html());
        this.$("#search_input").focus();
      }

      Search.prototype.events = {
        "keypress #search_input": "keypress",
        "click #search_button": "search",
        "click #options_button": "show_options"
      };

      Search.prototype.keypress = function(e) {
        if (e.keyCode === 13) {
          return route(this.$("#search_input").val());
        }
      };

      Search.prototype.search = function() {
        return route(this.$("#search_input").val());
      };

      Search.prototype.show_options = function() {
        return $("#options").show();
      };

      return Search;

    })(Spine.Controller);
    Options = (function(_super) {
      __extends(Options, _super);

      Options.prototype.template = _.template($("#tpl_options").html());

      function Options() {
        Options.__super__.constructor.apply(this, arguments);
        this.html(this.template({
          sites: sites,
          default_site: default_site
        }));
      }

      return Options;

    })(Spine.Controller);
    input = window.location.search;
    if (input && input.charAt(0) === "?" && input.charAt(1) === "q" && input.charAt(2) === "=") {
      return route(input.substring(3).replace(/\+/g, " "));
    } else {
      new Search({
        el: $("#main")
      });
      return new Options({
        el: $("#options")
      });
    }
  });

}).call(this);
